[
    {
        "id": "0d472f1f312b8c88",
        "type": "tab",
        "label": "Painel Solar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4c8ee0df9780afe5",
        "type": "tab",
        "label": "CLP 230RCE",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8f01f52760d57b75",
        "type": "tab",
        "label": "Estação A883 INMET",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e958d2cf7e0fd38",
        "type": "tab",
        "label": "YR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fef6b8e0.cf7ee8",
        "type": "tab",
        "label": "Dados Satélite",
        "disabled": false,
        "info": ""
    },
    {
        "id": "251971951bf65f5f",
        "type": "tab",
        "label": "OpenWeather",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b26cb4dd784296ba",
        "type": "tab",
        "label": "Painel Solar",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b84e96536d0bc8b3",
        "type": "tab",
        "label": "Dados para ML",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e84559379ead8d21",
        "type": "tab",
        "label": "File Browser",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "d652601b404538f1",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b8ee6e4d.ee49",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "dados_estacao_meteorologica",
        "tz": "America/Sao_Paulo",
        "charset": "UTF8"
    },
    {
        "id": "98e3532bd6bb3730",
        "type": "mqtt-broker",
        "name": "Adafruit.io",
        "broker": "io.adafruit.com",
        "port": "8883",
        "tls": "",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": 27,
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "d": true,
        "name": "Files",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b90e1ab.b432fe8",
        "type": "mqtt-broker",
        "name": "AWS IoT Core",
        "broker": "ayskvuv5aj6jn-ats.iot.eu-central-1.amazonaws.com",
        "port": "8883",
        "tls": "6227a848.b52f98",
        "clientid": "",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6227a848.b52f98",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "1d65721100b045d1448faec7e20d52426231f814a70fb28bd5de4d1eed001faa-certificate.pem.crt",
        "keyname": "1d65721100b045d1448faec7e20d52426231f814a70fb28bd5de4d1eed001faa-private.pem.key",
        "caname": "AmazonRootCA1.pem",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "0f496c211a063fdb",
        "type": "ui_tab",
        "name": "Dados Meteorológicos",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0c2a1356a7b60e52",
        "type": "ui_group",
        "name": "Dados Satélite",
        "tab": "0f496c211a063fdb",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "21080c0996472665",
        "type": "ui_group",
        "name": "Estação Meteorológica",
        "tab": "0f496c211a063fdb",
        "order": 3,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "cc212204f1de7ece",
        "type": "MySQLdatabase",
        "name": "MySQL",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "dados_satelite",
        "tz": "America/Sao_Paulo",
        "charset": "UTF8"
    },
    {
        "id": "86f8b97f3c0bfae3",
        "type": "ui_group",
        "name": "OpenWeather",
        "tab": "25299980f1c41729",
        "order": 1,
        "disp": true,
        "width": 13,
        "collapse": false,
        "className": ""
    },
    {
        "id": "25299980f1c41729",
        "type": "ui_tab",
        "name": "Clima",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "722cbfb244fe8f4d",
        "type": "yr-config",
        "api": "https://api.met.no/weatherapi/locationforecast/2.0",
        "debug": false
    },
    {
        "id": "928ecfe42f97af68",
        "type": "ui_group",
        "name": "LOGO! 230RCE",
        "tab": "b0e6f9b1ad0220c4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b0e6f9b1ad0220c4",
        "type": "ui_tab",
        "name": "LOGO 230RCE",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b5423df27b4619d8",
        "type": "ui_group",
        "name": "INMET",
        "tab": "97bc6c852225fe16",
        "order": 1,
        "disp": true,
        "width": 15,
        "collapse": false,
        "className": ""
    },
    {
        "id": "97bc6c852225fe16",
        "type": "ui_tab",
        "name": "INMET",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d6de02eae05f3d8a",
        "type": "MySQLdatabase",
        "name": "INMET",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "inmet",
        "tz": "America/Sao_Paulo",
        "charset": "UTF8"
    },
    {
        "id": "72a3eb63bc1866aa",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "dca2a507088a4b2d",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "c7d8a2180e9bc625",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "d61aaf07634ca2b4",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "056eaac629342c88",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 6,
        "width": 15,
        "height": 1
    },
    {
        "id": "e12cec936ca6368e",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "dcb1160274a073b5",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "7be81b535bef320b",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 11,
        "width": 15,
        "height": 1
    },
    {
        "id": "93f8dd60d56c1f0e",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "ca88fe0b5e6c06c8",
        "type": "ui_spacer",
        "z": "8f01f52760d57b75",
        "name": "spacer",
        "group": "b5423df27b4619d8",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "d0e0652f111704e8",
        "type": "ui_spacer",
        "z": "3e958d2cf7e0fd38",
        "name": "spacer",
        "group": "928ecfe42f97af68",
        "order": 2,
        "width": 6,
        "height": 1
    },
    {
        "id": "9e4cca1c559263e1",
        "type": "ui_spacer",
        "z": "3e958d2cf7e0fd38",
        "name": "spacer",
        "group": "928ecfe42f97af68",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "453e65d836e3c3f5",
        "type": "ui_spacer",
        "z": "3e958d2cf7e0fd38",
        "name": "spacer",
        "group": "928ecfe42f97af68",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "4671bbd9b32bd3b5",
        "type": "ui_group",
        "name": "Painel Solar",
        "tab": "1b27e53b1dde0be8",
        "order": 1,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "1b27e53b1dde0be8",
        "type": "ui_tab",
        "name": "Painel Solar",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bdd87a213cf1e133",
        "type": "ui_chart",
        "z": "0d472f1f312b8c88",
        "name": "",
        "group": "21080c0996472665",
        "order": 1,
        "width": 15,
        "height": 5,
        "label": "Painel solar: tensão gerada",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "9",
        "removeOlder": "1",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 80,
        "wires": [
            [
                "f2b5b52c1aef185e"
            ]
        ]
    },
    {
        "id": "309144e3d4457bc3",
        "type": "mqtt in",
        "z": "0d472f1f312b8c88",
        "name": "IoT Core Painel Solar",
        "topic": "$aws/things/lange-IoT-SensorPainelSolar/shadow/update/documents",
        "qos": "0",
        "datatype": "utf8",
        "broker": "b90e1ab.b432fe8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "059f9953ef079962"
            ]
        ]
    },
    {
        "id": "059f9953ef079962",
        "type": "json",
        "z": "0d472f1f312b8c88",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "91b89594b2444894"
            ]
        ]
    },
    {
        "id": "91b89594b2444894",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "",
        "func": "var dados = msg.payload;\nvar dadosState = dados['state'];\nvar dadosReported = dadosState['reported'];\n\nmsg.payload = dadosReported;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 80,
        "wires": [
            [
                "4e9b8c9c0f2651bb",
                "8114052b134e3246",
                "26ff3c88034e504d",
                "4f1338bc864962aa"
            ]
        ]
    },
    {
        "id": "4e9b8c9c0f2651bb",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "Tensao",
        "func": "var dados = msg.payload;\nvar tensao = dados['tensao'];\nmsg.payload = tensao;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "bdd87a213cf1e133"
            ]
        ]
    },
    {
        "id": "caa2a88e24028a0a",
        "type": "ui_chart",
        "z": "0d472f1f312b8c88",
        "name": "",
        "group": "21080c0996472665",
        "order": 2,
        "width": 15,
        "height": 5,
        "label": "Painel solar: temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "-15",
        "ymax": "50",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 120,
        "wires": [
            [
                "89710d75edec6e6f"
            ]
        ]
    },
    {
        "id": "8114052b134e3246",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "Temperatura",
        "func": "let dados = msg.payload;\nlet temperatura = dados['temperatura'];\nglobal.set(\"temperaturaExterna\", temperatura);\n\nmsg.payload = temperatura;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 120,
        "wires": [
            [
                "caa2a88e24028a0a",
                "c87b288646da0efd",
                "22155ac577a28f7b"
            ]
        ]
    },
    {
        "id": "6c8890c84c403ec9",
        "type": "ui_chart",
        "z": "0d472f1f312b8c88",
        "name": "",
        "group": "21080c0996472665",
        "order": 3,
        "width": 15,
        "height": 5,
        "label": "Painel solar: umidade solo",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "2700",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "26ff3c88034e504d",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "umidade solo",
        "func": "var dados = msg.payload;\nvar umidadeSolo = dados['umidadeSolo'];\nmsg.payload = umidadeSolo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 280,
        "wires": [
            [
                "6c8890c84c403ec9",
                "cab908b625bdfcb9"
            ]
        ]
    },
    {
        "id": "c87b288646da0efd",
        "type": "ui_text",
        "z": "0d472f1f312b8c88",
        "group": "0c2a1356a7b60e52",
        "order": 8,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Temperatura externa",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 160,
        "wires": []
    },
    {
        "id": "4f1338bc864962aa",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "SQL insert",
        "func": "var dados = msg.payload;\n\nvar tensao = dados['tensao'];\nvar temperatura = dados['temperatura'];\nvar umidadeSolo = dados['umidadeSolo'];\n\nlet comandoSQL = \"INSERT INTO dados (tensao, temperatura, umidade_solo) values (\";\ncomandoSQL = comandoSQL + tensao + \", \";\ncomandoSQL = comandoSQL + temperatura + \", \";\ncomandoSQL = comandoSQL + umidadeSolo + \");\";\nmsg.topic = comandoSQL;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "7bcc2cb4c4ab1c6b"
            ]
        ]
    },
    {
        "id": "728fc55b3b98cc62",
        "type": "mqtt out",
        "z": "0d472f1f312b8c88",
        "name": "LOGO! 230RCE",
        "topic": "$aws/things/Logo230RCE/shadow/update",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b90e1ab.b432fe8",
        "x": 960,
        "y": 320,
        "wires": []
    },
    {
        "id": "cab908b625bdfcb9",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "MQTT Umidade Solo",
        "func": "let umidadeSolo = msg.payload;\n//let umidSolo = parseInt(umidadeSolo);\n\nlet mensagem = \"{\\\"state\\\":{\\\"desired\\\":\";\nmensagem = mensagem.concat(\"{\\\"AM..4:4-1\\\": \\\"\");\nmensagem = mensagem.concat(umidadeSolo.toString(16));\nmensagem = mensagem.concat(\"\\\"\");\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 320,
        "wires": [
            [
                "728fc55b3b98cc62"
            ]
        ]
    },
    {
        "id": "bee67d338d54d22e",
        "type": "mqtt out",
        "z": "0d472f1f312b8c88",
        "name": "LOGO! 230RCE",
        "topic": "$aws/things/Logo230RCE/shadow/update",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b90e1ab.b432fe8",
        "x": 960,
        "y": 220,
        "wires": []
    },
    {
        "id": "22155ac577a28f7b",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "MQTT temp. externa",
        "func": "let dados = msg.payload;\nlet data = parseInt(dados * 100);\n\nlet mensagem = \"{\\\"state\\\":{\\\"desired\\\":\";\nmensagem = mensagem.concat(\"{\\\"AM..4:10-1\\\": \\\"\");\nmensagem = mensagem.concat(data.toString(16));\nmensagem = mensagem.concat(\"\\\"\");\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "bee67d338d54d22e"
            ]
        ]
    },
    {
        "id": "69ff99f39a1d7098",
        "type": "mqtt in",
        "z": "0d472f1f312b8c88",
        "name": "IoT Core LoRaWAN Bridge",
        "topic": "$aws/things/Lange-BancadaIoT-MQTTBridge/2232330000888806/#",
        "qos": "0",
        "datatype": "utf8",
        "broker": "b90e1ab.b432fe8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "7178928e4111bcc4"
            ]
        ]
    },
    {
        "id": "a70e9e587945b5d8",
        "type": "function",
        "z": "0d472f1f312b8c88",
        "name": "Diferença Temperatura",
        "func": "let dados = msg.payload;\nlet object = dados['object'];\nlet temperatura = object['Temperatura'];\n\nlet temperaturaExterna = global.get(\"temperaturaExterna\");\n\nmsg.payload = temperatura - temperaturaExterna;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 460,
        "wires": [
            [
                "9ff3cc38acec63b3",
                "36a0d7cf285d48de"
            ]
        ]
    },
    {
        "id": "7178928e4111bcc4",
        "type": "json",
        "z": "0d472f1f312b8c88",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "a70e9e587945b5d8"
            ]
        ]
    },
    {
        "id": "9ff3cc38acec63b3",
        "type": "ui_chart",
        "z": "0d472f1f312b8c88",
        "name": "",
        "group": "4671bbd9b32bd3b5",
        "order": 4,
        "width": 20,
        "height": 4,
        "label": "Diferença temperatura interna-externa",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "36a0d7cf285d48de",
        "type": "debug",
        "z": "0d472f1f312b8c88",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 520,
        "wires": []
    },
    {
        "id": "7bcc2cb4c4ab1c6b",
        "type": "mysql",
        "z": "0d472f1f312b8c88",
        "mydb": "b8ee6e4d.ee49",
        "name": "DB Painel Solar",
        "x": 980,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f2b5b52c1aef185e",
        "type": "debug",
        "z": "0d472f1f312b8c88",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 60,
        "wires": []
    },
    {
        "id": "89710d75edec6e6f",
        "type": "debug",
        "z": "0d472f1f312b8c88",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 120,
        "wires": []
    },
    {
        "id": "5a88e28dfdb91af7",
        "type": "mqtt in",
        "z": "4c8ee0df9780afe5",
        "name": "AWS IoT Core - LOGO! 230RCE",
        "topic": "$aws/things/Logo230RCE/shadow/update/documents",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "b90e1ab.b432fe8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 120,
        "wires": [
            [
                "fa221d8fcd05b75d"
            ]
        ]
    },
    {
        "id": "9b80fea991f5b16e",
        "type": "function",
        "z": "4c8ee0df9780afe5",
        "name": "Status CLP",
        "func": "let msgM1 = {};\nlet msgM2 = {};\nlet msgM3 = {};\nvar msgAM4 = {};\n\nlet dados = msg.payload;\n//let dadosCurrent = dados[\"current\"][\"state\"];\n//let dadosState = dadosCurrent[\"state\"];\nlet dadosReported = dados[\"current\"][\"state\"][\"reported\"];\n\n//msg.payload = dadosReported;\n\nmsgM2.payload = dadosReported[\"M..1:2-1\"];\nmsgM3.payload = dadosReported[\"M..1:3-1\"];\nmsgAM4.payload = dadosReported[\"AM..4:4-1\"];\nreturn [msgM1, msgM2, msgM3, msgAM4];",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 120,
        "wires": [
            [],
            [
                "dd383e72223991c0"
            ],
            [
                "af5c5b6a7011aa2e"
            ],
            [
                "b1b351f8b24e0fcc"
            ]
        ]
    },
    {
        "id": "fa221d8fcd05b75d",
        "type": "json",
        "z": "4c8ee0df9780afe5",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "9b80fea991f5b16e"
            ]
        ]
    },
    {
        "id": "dd383e72223991c0",
        "type": "ui_text",
        "z": "4c8ee0df9780afe5",
        "group": "928ecfe42f97af68",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Motor Ligado",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 810,
        "y": 100,
        "wires": []
    },
    {
        "id": "af5c5b6a7011aa2e",
        "type": "ui_text",
        "z": "4c8ee0df9780afe5",
        "group": "928ecfe42f97af68",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fora de Sunrise-Sunset",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 850,
        "y": 140,
        "wires": []
    },
    {
        "id": "b1b351f8b24e0fcc",
        "type": "ui_text",
        "z": "4c8ee0df9780afe5",
        "group": "928ecfe42f97af68",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Umidade",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 800,
        "y": 180,
        "wires": []
    },
    {
        "id": "d8cf80fd3b8864d5",
        "type": "mqtt in",
        "z": "8f01f52760d57b75",
        "name": "AWS IoT Core - INMET",
        "topic": "$aws/things/Lange-INMET-WebCrawler/shadow/update/documents",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "b90e1ab.b432fe8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "7f3e742addf18a01",
                "642d0c0661e127f0"
            ]
        ]
    },
    {
        "id": "7f3e742addf18a01",
        "type": "json",
        "z": "8f01f52760d57b75",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "be106970eb3b5782"
            ]
        ]
    },
    {
        "id": "be106970eb3b5782",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "getReported",
        "func": "var dados = msg.payload;\nvar state = dados[\"state\"];\nmsg.payload = state;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 140,
        "wires": [
            [
                "01c5a31897db145b",
                "a69b983c61227093"
            ]
        ]
    },
    {
        "id": "01c5a31897db145b",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "getEstacao",
        "func": "let dados = msg.payload;\nlet estacao = dados[\"estacao\"];\nlet result = estacao.replace(\"Estação: \", \"\");\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 140,
        "wires": [
            [
                "9f47dc211f4328a6"
            ]
        ]
    },
    {
        "id": "9f47dc211f4328a6",
        "type": "ui_text",
        "z": "8f01f52760d57b75",
        "group": "b5423df27b4619d8",
        "order": 2,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Estação",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1060,
        "y": 140,
        "wires": []
    },
    {
        "id": "3d0d7c6bf846a6ca",
        "type": "ui_text",
        "z": "8f01f52760d57b75",
        "group": "b5423df27b4619d8",
        "order": 7,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Data",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1070,
        "y": 200,
        "wires": []
    },
    {
        "id": "83a43793000dda17",
        "type": "inject",
        "z": "8f01f52760d57b75",
        "name": "Inject Dados Teste",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":{\"reported\":{\"hora\":{\"0\":\"0000\",\"1\":\"0100\",\"2\":\"0200\",\"3\":\"0300\",\"4\":\"0400\",\"5\":\"0500\",\"6\":\"0600\",\"7\":\"0700\",\"8\":\"0800\",\"9\":\"0900\",\"10\":\"1000\",\"11\":\"1100\",\"12\":\"1200\",\"13\":\"1300\",\"14\":\"1400\",\"15\":\"1500\",\"16\":\"1600\",\"17\":\"1700\",\"18\":\"1800\",\"19\":\"1900\",\"20\":\"2000\",\"21\":\"2100\",\"22\":\"2200\",\"23\":\"2300\"},\"temp_inst\":{\"0\":\"19,5\",\"1\":\"20,2\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"temp_max\":{\"0\":\"19,6\",\"1\":\"20,2\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"temp_min\":{\"0\":\"19,2\",\"1\":\"19,5\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"umidade_inst\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"umidade_max\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"umidade_min\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pto_orvalho_inst\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pto_orvalho_max\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pto_orvalho_min\":{\"0\":\"\",\"1\":\"\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pressao_inst\":{\"0\":\"962,1\",\"1\":\"962,3\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pressao_max\":{\"0\":\"962,2\",\"1\":\"962,3\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"pressao_min\":{\"0\":\"961,8\",\"1\":\"962,1\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"vento_vel\":{\"0\":\"3,6\",\"1\":\"5,4\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"vento_dir\":{\"0\":\"52,0\",\"1\":\"45,0\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"vento_raj\":{\"0\":\"8,8\",\"1\":\"9,7\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"radiacao\":{\"0\":\"\",\"1\":\"1,20\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"},\"chuva\":{\"0\":\"0,0\",\"1\":\"0,0\",\"2\":\"\",\"3\":\"\",\"4\":\"\",\"5\":\"\",\"6\":\"\",\"7\":\"\",\"8\":\"\",\"9\":\"\",\"10\":\"\",\"11\":\"\",\"12\":\"\",\"13\":\"\",\"14\":\"\",\"15\":\"\",\"16\":\"\",\"17\":\"\",\"18\":\"\",\"19\":\"\",\"20\":\"\",\"21\":\"\",\"22\":\"\",\"23\":\"\"}},\"estacao\":\"Estação: IBIRUBA A883\",\"data\":\"Data de Referência: 09/05/2024 - 09/05/2024\"}}",
        "payloadType": "json",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "7f3e742addf18a01",
                "642d0c0661e127f0"
            ]
        ]
    },
    {
        "id": "706314a4aaf62f4d",
        "type": "ui_text",
        "z": "8f01f52760d57b75",
        "group": "b5423df27b4619d8",
        "order": 9,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Hora última leitura (GMT)",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "ff2c48aa1d4ee136",
        "type": "ui_text",
        "z": "8f01f52760d57b75",
        "group": "b5423df27b4619d8",
        "order": 12,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Última precipitação",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 280,
        "wires": []
    },
    {
        "id": "a69b983c61227093",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "Get Dados",
        "func": "// dados do JSON vindo do AWS\nlet dados = msg.payload;\nlet data = dados[\"data\"];\nlet reported = dados[\"reported\"]\nlet chuva = reported[\"chuva\"];\nlet hora = reported[\"hora\"];\n\n\n/*********************************\n * Mensagens para envio de dados *\n *********************************/\nlet msgData = {};\nlet msgHora = {};\nlet msgChuva = {};\nlet msgInsertDB = {};\n\n/*******************************\n * Conversao data e hora       *\n * Considerando falta de dados *\n *******************************/\n\n// obter data no formato mm/dd/aaaa - hh:mm:ss\ndata = data.replace(\"Data de Referência: \", \"\");\ndata = data.replace(\" - \", \"\\/\");\n\nlet diaMesAno = data.split(\"\\/\");\nlet dateString = diaMesAno[1] + \"\\/\";\n\ndateString = dateString + diaMesAno[0] + \"\\/\";\ndateString = dateString + diaMesAno[2];\ndateString = dateString + \" 0:00:00\";\n\nlet dataMeiaNoite = new Date(dateString);\nlet epochMeiaNoite = dataMeiaNoite.getTime();\nlet horaUltimaLeitura = \"0000\";\n\n// obter ultimos dados da estacao\nlet i = 0;\nwhile (chuva[i] != \"\") {\n    i++;\n}\n\nif (i == 0) {\n    // sem dados no periodo\n    // ultima leitura eh do dia anterior\n    epochMeiaNoite = epochMeiaNoite - 86400000;\n} else {\n    i--;\n    horaUltimaLeitura = hora[i];\n}\n\nhoraUltimaLeitura = horaUltimaLeitura.slice(0, 2);\nlet horaUL = parseInt(horaUltimaLeitura) * 3600000;\n\nlet horario = epochMeiaNoite + horaUL;\nlet horarioTexto = new Date(horario).toString();\n\n\n// INMET nao dah em gmt-3 e estou com preguiça de arrumar\nhorarioTexto = horarioTexto.replace(\" (Brasilia Standard Time)\", \"\");\nhorarioTexto = horarioTexto.replace(\"-0300\", \"\");\n\n/*******************************************/\n// obter dados de precipitacao\n// funcao repetida, apenas para documentacao do codigo\nlet dadosChuva = chuva[i];\nlet epochText = horario.toString();\n\n\n/****************************************************\n * Insert no banco de dados                         *\n ****************************************************/\nlet dataChuva = dadosChuva.replace(\",\", \".\")\nlet comandoSQL = \"INSERT IGNORE INTO INMET (epoch, precipitacao, datahora) values (\";\ncomandoSQL = comandoSQL + epochText + \", \";\ncomandoSQL = comandoSQL + dataChuva + \", \";\ncomandoSQL = comandoSQL + \"'\" + horarioTexto + \"');\";\n\n\n// encapsulamento de dados para envio\nmsgData.payload = horarioTexto;\nmsgHora.payload = horaUltimaLeitura + \":00\";\nmsgChuva.payload = dadosChuva;\nmsgInsertDB.topic = comandoSQL;\nreturn [msgData, msgHora, msgChuva, msgInsertDB];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 240,
        "wires": [
            [
                "3d0d7c6bf846a6ca"
            ],
            [
                "706314a4aaf62f4d"
            ],
            [
                "ff2c48aa1d4ee136"
            ],
            [
                "bc75b1ba0c95648a"
            ]
        ]
    },
    {
        "id": "642d0c0661e127f0",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "Select 48horas precipit",
        "func": "let intervalo = Date.now() - 172800000;\nlet comandoSQL = \"select sum(precipitacao) as totalPrecip \";\ncomandoSQL = comandoSQL + \"from INMET where epoch>=\";\ncomandoSQL = comandoSQL + intervalo.toString();\ncomandoSQL = comandoSQL + \";\";\n\nmsg.topic = comandoSQL;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 400,
        "wires": [
            [
                "5b952eafb8ea737c"
            ]
        ]
    },
    {
        "id": "fa51df072c9dadee",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "Total",
        "func": "let dados = msg.payload[0][\"totalPrecip\"]\n\nmsg.payload = dados;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 400,
        "wires": [
            [
                "d98c7a875811a48b",
                "940563d4281f9fb9"
            ]
        ]
    },
    {
        "id": "d98c7a875811a48b",
        "type": "ui_text",
        "z": "8f01f52760d57b75",
        "group": "b5423df27b4619d8",
        "order": 14,
        "width": 7,
        "height": 2,
        "name": "Precipitação 48h",
        "label": "Precipitação 48h",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 400,
        "wires": []
    },
    {
        "id": "509b1c2437628152",
        "type": "mqtt out",
        "z": "8f01f52760d57b75",
        "name": "AWS LOGO! 230RCE",
        "topic": "$aws/things/Logo230RCE/shadow/update",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b90e1ab.b432fe8",
        "x": 1040,
        "y": 540,
        "wires": []
    },
    {
        "id": "940563d4281f9fb9",
        "type": "function",
        "z": "8f01f52760d57b75",
        "name": "Precip. acumulada para AWS",
        "func": "let dados = msg.payload;\nlet data = parseInt(dados*100);\n\nlet hexDados = data.toString(16);\n\nlet mensagem = \"{\\\"state\\\":{\\\"desired\\\":\";\nmensagem = mensagem + \"{\\\"AM..4:6-1\\\": \\\"\";\nmensagem = mensagem + hexDados;\nmensagem = mensagem + \"\\\"\";\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 540,
        "wires": [
            [
                "509b1c2437628152"
            ]
        ]
    },
    {
        "id": "bc75b1ba0c95648a",
        "type": "mysql",
        "z": "8f01f52760d57b75",
        "mydb": "d6de02eae05f3d8a",
        "name": "DB Inmet",
        "x": 1000,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "5b952eafb8ea737c",
        "type": "mysql",
        "z": "8f01f52760d57b75",
        "mydb": "d6de02eae05f3d8a",
        "name": "DB Inmet",
        "x": 680,
        "y": 400,
        "wires": [
            [
                "fa51df072c9dadee"
            ]
        ]
    },
    {
        "id": "7fe2eeb2e4756c06",
        "type": "inject",
        "z": "3e958d2cf7e0fd38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10800",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 80,
        "wires": [
            [
                "dbd3b5c90377b5e5"
            ]
        ]
    },
    {
        "id": "dbd3b5c90377b5e5",
        "type": "weather data",
        "z": "3e958d2cf7e0fd38",
        "yrconfig": "722cbfb244fe8f4d",
        "latitude": "-28.6532",
        "longitude": "-53.1135",
        "forecastType": "compact",
        "name": "",
        "x": 310,
        "y": 80,
        "wires": [
            [
                "e8e8583fa762bdef"
            ]
        ]
    },
    {
        "id": "e8e8583fa762bdef",
        "type": "json",
        "z": "3e958d2cf7e0fd38",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 470,
        "y": 80,
        "wires": [
            [
                "bd4cbda7e6ad5547"
            ]
        ]
    },
    {
        "id": "bd4cbda7e6ad5547",
        "type": "function",
        "z": "3e958d2cf7e0fd38",
        "name": "getPrevisaoPrecipitacao",
        "func": "let dados = msg.payload[\"properties\"][\"timeseries\"];\nlet msg1 = {};\n\n\nlet precipitacao = [];\nlet precipitacaoSum = 0;\n\nfor (var i = 0; i < 48; i++) {\n    let d = dados[i][\"data\"][\"next_1_hours\"][\"details\"][\"precipitation_amount\"];\n    precipitacao.push(d);\n    precipitacaoSum = precipitacaoSum + parseFloat(d);\n}\n\n//msg.payload = dados[0][\"data\"][\"next_1_hours\"][\"details\"];\nmsg.payload = precipitacaoSum;\n\nmsg1.payload = precipitacao;\n\nreturn [msg, msg1];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 80,
        "wires": [
            [
                "c2c96001d166dc71",
                "9c84ae9833b438cf"
            ],
            [
                "c68085878d6aa568"
            ]
        ]
    },
    {
        "id": "c2c96001d166dc71",
        "type": "ui_text",
        "z": "3e958d2cf7e0fd38",
        "group": "928ecfe42f97af68",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Previsão precipitação acumulada 48h",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 990,
        "y": 60,
        "wires": []
    },
    {
        "id": "129c46e29f4b2f0f",
        "type": "mqtt out",
        "z": "3e958d2cf7e0fd38",
        "name": "AWS LOGO! 230RCE",
        "topic": "$aws/things/Logo230RCE/shadow/update",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b90e1ab.b432fe8",
        "x": 1040,
        "y": 180,
        "wires": []
    },
    {
        "id": "9c84ae9833b438cf",
        "type": "function",
        "z": "3e958d2cf7e0fd38",
        "name": "Previsão Precip. acumulada para LOGO! 230RCE",
        "func": "let dados = msg.payload;\nlet data = parseInt(dados * 100);\n\nlet hexDados = data.toString(16);\n\nlet mensagem = \"{\\\"state\\\":{\\\"desired\\\":\";\nmensagem = mensagem + \"{\\\"AM..4:8-1\\\": \\\"\";\nmensagem = mensagem + hexDados;\nmensagem = mensagem + \"\\\"\";\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 180,
        "wires": [
            [
                "129c46e29f4b2f0f"
            ]
        ]
    },
    {
        "id": "c68085878d6aa568",
        "type": "debug",
        "z": "3e958d2cf7e0fd38",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 100,
        "wires": []
    },
    {
        "id": "d5dd717760f9aafc",
        "type": "inject",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 80,
        "wires": [
            [
                "0610830cb216494c"
            ]
        ]
    },
    {
        "id": "d10e3970a3429cf7",
        "type": "http request",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.stormglass.io/v2/bio/point?lat=-28.6544996&lng=-53.109622&params=soilMoisture10cm,soilMoisture,soilTemperature,soilTemperature10cm&start={{{payload}}}&end={{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 850,
        "y": 40,
        "wires": [
            [
                "5c07d390d6df39f1"
            ]
        ]
    },
    {
        "id": "0610830cb216494c",
        "type": "function",
        "z": "fef6b8e0.cf7ee8",
        "name": "StormGlass",
        "func": "const utcDate = new Date();\nmsg.payload = utcDate.toISOString();\n\nmsg.headers = {};\n//msg.headers['Authorization'] = 'fa26861e-42d0-11ee-a654-0242ac130002-fa268682-42d0-11ee-a654-0242ac130002'; \nmsg.headers['Authorization'] = '5b803a14-59dd-11ed-bce5-0242ac130002-5b803af0-59dd-11ed-bce5-0242ac130002';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 40,
        "wires": [
            [
                "743a87ec2bebc4fc"
            ]
        ]
    },
    {
        "id": "743a87ec2bebc4fc",
        "type": "change",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dataUTC",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 40,
        "wires": [
            [
                "d10e3970a3429cf7"
            ]
        ]
    },
    {
        "id": "12b011f1c566dd0a",
        "type": "inject",
        "z": "fef6b8e0.cf7ee8",
        "name": "Intervalo de consulta dos dados",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "21600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "0610830cb216494c"
            ]
        ]
    },
    {
        "id": "d0a7e7f35e8e0c56",
        "type": "function",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "func": "msg.payload = '{\"hours\":[{\"soilMoisture\":{\"noaa\":0.3,\"sg\":0.3},\"soilMoisture10cm\":{\"noaa\":0.31,\"sg\":0.31},\"soilTemperature\":{\"noaa\":16.95,\"sg\":16.95},\"soilTemperature10cm\":{\"noaa\":16.67,\"sg\":16.67},\"time\":\"2023-08-24T22:00:00+00:00\"}],\"meta\":{\"cost\":1,\"dailyQuota\":10,\"end\":\"2023-08-24 22:56\",\"lat\":-28.6544996,\"lng\":-53.109622,\"params\":[\"soilMoisture10cm\",\"soilMoisture\",\"soilTemperature\",\"soilTemperature10cm\"],\"requestCount\":1,\"start\":\"2023-08-24 22:00\"}}';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 180,
        "wires": [
            [
                "5c07d390d6df39f1"
            ]
        ]
    },
    {
        "id": "1dbb4bcd0b0c5c39",
        "type": "inject",
        "z": "fef6b8e0.cf7ee8",
        "name": "Inject dados teste",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "d0a7e7f35e8e0c56"
            ]
        ]
    },
    {
        "id": "5c07d390d6df39f1",
        "type": "json",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 180,
        "wires": [
            [
                "dcf470f9fb85860a",
                "077ce7db84f6410e"
            ]
        ]
    },
    {
        "id": "dcf470f9fb85860a",
        "type": "function",
        "z": "fef6b8e0.cf7ee8",
        "name": "SQL insert",
        "func": "let msg1 = {};\nlet msg2 = {};\n\n\nlet dados = msg.payload;\n\nlet hours = dados[\"hours\"];\nhours = hours[0];\n\nlet soilMoisture = hours[\"soilMoisture\"];\nlet soilMoistureNOAA = soilMoisture[\"noaa\"];\n\n\nlet soilMoisture10cm = hours[\"soilMoisture10cm\"];\nlet soilMoisture10cmNOAA = soilMoisture10cm[\"noaa\"];\n\n\nlet soilTemperature = hours[\"soilTemperature\"];\nlet soilTemperatureNOAA = soilTemperature[\"noaa\"];\n\n\nlet soilTemperature10cm = hours[\"soilTemperature10cm\"];\nlet soilTemperature10cmNOAA = soilTemperature10cm[\"noaa\"];\n\nlet hora = Date.now();\n\nvar chart1 = [\n    {label: \"soilMoisture\", payload: soilMoistureNOAA, series: \"soilMoisture\"},\n    {label: \"soilMoisture10cm\", payload: soilMoisture10cmNOAA, series: \"soilMoisture10cm\"}\n];\nmsg1 = chart1;\n\nvar chart2 = [\n    {label: \"soilTemperature\", payload: soilTemperatureNOAA, series: \"soilTemperature\"},\n    {label: \"soilTemperature10cm\", payload: soilTemperature10cmNOAA, series: \"soilTemperature10cm\"}\n];\nmsg2 = chart2;\n\n\nlet comandoSQL = \"INSERT INTO dados (temperatura_solo, temperatura_solo_10cm, umidade_solo, umidade_solo_10cm) values (\";\ncomandoSQL = comandoSQL + soilTemperatureNOAA + \", \";\ncomandoSQL = comandoSQL + soilTemperature10cmNOAA + \", \";\ncomandoSQL = comandoSQL + soilMoistureNOAA + \", \";\ncomandoSQL = comandoSQL + soilMoisture10cmNOAA + \");\";\nmsg.topic = comandoSQL;\n\nreturn [msg, msg1, msg2];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 280,
        "wires": [
            [
                "1cb2fa0eac3fe970"
            ],
            [
                "72a1ad10413de5b1"
            ],
            [
                "1ebf0692a19463fc"
            ]
        ]
    },
    {
        "id": "72a1ad10413de5b1",
        "type": "ui_chart",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "group": "0c2a1356a7b60e52",
        "order": 2,
        "width": 15,
        "height": 5,
        "label": "Umidade do Solo - NOAA",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1030,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "06587e44dbd60f4e",
        "type": "ui_button",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "group": "0c2a1356a7b60e52",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Clear All",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "72a1ad10413de5b1",
                "1ebf0692a19463fc"
            ]
        ]
    },
    {
        "id": "1ebf0692a19463fc",
        "type": "ui_chart",
        "z": "fef6b8e0.cf7ee8",
        "name": "",
        "group": "0c2a1356a7b60e52",
        "order": 1,
        "width": 15,
        "height": 5,
        "label": "Temperatura do Solo - NOAA",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ad24a8ef9cbcb0c4",
        "type": "mqtt out",
        "z": "fef6b8e0.cf7ee8",
        "name": "AWS StormGlass",
        "topic": "$aws/things/lange-IoT-StormGlass/shadow/update/documents",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b90e1ab.b432fe8",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "077ce7db84f6410e",
        "type": "function",
        "z": "fef6b8e0.cf7ee8",
        "name": "Dados para AWS IoT Core",
        "func": "var msgOut = {};\nvar dados = msg.payload;\nvar hora = Date.now();\n\n\nlet hours = dados[\"hours\"];\nhours = hours[0];\n\nlet soilMoisture = hours[\"soilMoisture\"];\nlet soilMoistureNOAA = soilMoisture[\"noaa\"];\n\nlet soilMoisture10cm = hours[\"soilMoisture10cm\"];\nlet soilMoisture10cmNOAA = soilMoisture10cm[\"noaa\"];\n\nlet soilTemperature = hours[\"soilTemperature\"];\nlet soilTemperatureNOAA = soilTemperature[\"noaa\"];\n\nlet soilTemperature10cm = hours[\"soilTemperature10cm\"];\nlet soilTemperature10cmNOAA = soilTemperature10cm[\"noaa\"];\n\nlet mensagem = \"{\\\"state\\\":{\\\"reported\\\":\";\nmensagem = mensagem.concat(\"{\");\n \nmensagem = mensagem.concat(\"\\\"soilMoistureNOAA\\\": \");\nmensagem = mensagem.concat(soilMoistureNOAA);\nmensagem = mensagem.concat(\",\");\n  \nmensagem = mensagem.concat(\"\\\"soilMoisture10cmNOAA\\\": \");\nmensagem = mensagem.concat(soilMoisture10cmNOAA);\nmensagem = mensagem.concat(\",\"); \n\nmensagem = mensagem.concat(\"\\\"soilTemperatureNOAA\\\": \");\nmensagem = mensagem.concat(soilTemperatureNOAA);\nmensagem = mensagem.concat(\",\"); \n\nmensagem = mensagem.concat(\"\\\"soilTemperature10cmNOAA\\\": \");\nmensagem = mensagem.concat(soilTemperature10cmNOAA);\n\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 180,
        "wires": [
            [
                "ad24a8ef9cbcb0c4"
            ]
        ]
    },
    {
        "id": "3ac937fc62e11db2",
        "type": "function",
        "z": "fef6b8e0.cf7ee8",
        "name": "Dados Teste para AWS",
        "func": "var hora = Date.now();\n\nlet soilMoisture = 10;\nlet soilMoistureNOAA = 20;\n\nlet soilMoisture10cm = 30;\nlet soilMoisture10cmNOAA = 40;\n\nlet soilTemperature = 50;\nlet soilTemperatureNOAA = soilTemperature[\"noaa\"];\n\nlet soilTemperature10cm = 60;\nlet soilTemperature10cmNOAA = 70;\n\nlet mensagem = \"{\\\"state\\\":{\\\"reported\\\":\";\nmensagem = mensagem.concat(\"{\");\n\nmensagem = mensagem.concat(\"\\\"hora\\\": \");\nmensagem = mensagem.concat(String(hora));\nmensagem = mensagem.concat(\",\");\n  \nmensagem = mensagem.concat(\"\\\"soilMoisture\\\": \");\nmensagem = mensagem.concat(String(soilMoisture));\nmensagem = mensagem.concat(\",\");  \n  \nmensagem = mensagem.concat(\"\\\"soilMoistureNOAA\\\": \");\nmensagem = mensagem.concat(String(soilMoistureNOAA));\nmensagem = mensagem.concat(\",\");\n  \nmensagem = mensagem.concat(\"\\\"soilMoisture10cm\\\": \");\nmensagem = mensagem.concat(String(soilMoisture10cm));\nmensagem = mensagem.concat(\",\");\n  \nmensagem = mensagem.concat(\"\\\"soilMoisture10cmNOAA\\\": \");\nmensagem = mensagem.concat(String(soilMoisture10cmNOAA));\nmensagem = mensagem.concat(\",\"); \n \nmensagem = mensagem.concat(\"\\\"soilTemperature10cmNOAA\\\": \");\nmensagem = mensagem.concat(String(soilTemperature10cmNOAA));\n\nmensagem = mensagem + \"}}}\";\n\nmsg.payload = mensagem;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 460,
        "wires": [
            [
                "ad24a8ef9cbcb0c4"
            ]
        ]
    },
    {
        "id": "f75fd99f93ddfaa2",
        "type": "inject",
        "z": "fef6b8e0.cf7ee8",
        "name": "Inject dados teste - AWS",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "3ac937fc62e11db2"
            ]
        ]
    },
    {
        "id": "1cb2fa0eac3fe970",
        "type": "mysql",
        "z": "fef6b8e0.cf7ee8",
        "mydb": "cc212204f1de7ece",
        "name": "DB StormGlass",
        "x": 1060,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a0d5f1ce04da1f2d",
        "type": "inject",
        "z": "251971951bf65f5f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "f75e0c7b2436dce0"
            ]
        ]
    },
    {
        "id": "6b4051b4e32e5440",
        "type": "comment",
        "z": "251971951bf65f5f",
        "name": "Dados OpenWeather",
        "info": "23e316ccf3386edcf0c7e0a2776262c4\n\n-28.6275, -53.0897",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "23dafb527f18e834",
        "type": "function",
        "z": "251971951bf65f5f",
        "name": "Data Split",
        "func": "var dados = msg.payload;\nvar msgLocal = {};\nvar msgTemperatura = {};\nvar msgPrecipitacao = {};\nvar msgUmidade = {};\nvar msgSunrise = {};\nvar msgSunset = {};\n\nvar local = dados[\"location\"];\nvar precipitacao = dados[\"rain\"];\nvar temperatura = dados[\"tempc\"];\nvar clima = dados[\"weather\"];\nvar umidade = dados[\"humidity\"];\nvar sunrise = dados[\"sunrise\"];\nvar sunset = dados[\"sunset\"];\n\nvar chart1 = [\n    { label: \"Temperatura\", payload: temperatura, series: \"Temperatura\"}\n];\nmsgTemperatura = chart1;\n\nvar chart2 = [\n    { label: \"Precipitação\", payload: precipitacao, series: \"Precipitação\" }\n];\nmsgPrecipitacao = chart2;\n\nvar chart3 = [\n    { label: \"Umidade do ar\", payload: umidade, series: \"Umidade do ar\" }\n];\nmsgUmidade = chart3;\n\nmsgLocal.payload = local;\nmsgSunrise.payload = sunrise;\nmsgSunset.payload = sunset;\nreturn [msgLocal, msgTemperatura, msgPrecipitacao, \n        msgUmidade, msgSunrise, msgSunset];\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 160,
        "wires": [
            [
                "9e248e9734973b15"
            ],
            [
                "8a15ff09a2637444"
            ],
            [
                "67fb6a821aa68141"
            ],
            [
                "c8b3f337fe7724cd"
            ],
            [
                "e4e7c40a429e94f2"
            ],
            [
                "09dd19abb7c59d7d"
            ]
        ]
    },
    {
        "id": "9e248e9734973b15",
        "type": "ui_text",
        "z": "251971951bf65f5f",
        "group": "86f8b97f3c0bfae3",
        "order": 2,
        "width": 7,
        "height": 1,
        "name": "",
        "label": "Cidade",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 140,
        "wires": []
    },
    {
        "id": "8a15ff09a2637444",
        "type": "ui_chart",
        "z": "251971951bf65f5f",
        "name": "",
        "group": "86f8b97f3c0bfae3",
        "order": 5,
        "width": 13,
        "height": 4,
        "label": "Temperatura",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "67fb6a821aa68141",
        "type": "ui_chart",
        "z": "251971951bf65f5f",
        "name": "",
        "group": "86f8b97f3c0bfae3",
        "order": 6,
        "width": 13,
        "height": 4,
        "label": "Precipitação",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c8b3f337fe7724cd",
        "type": "ui_chart",
        "z": "251971951bf65f5f",
        "name": "",
        "group": "86f8b97f3c0bfae3",
        "order": 7,
        "width": 13,
        "height": 4,
        "label": "Umidade",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 940,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8bde0cc085df32d5",
        "type": "ui_text",
        "z": "251971951bf65f5f",
        "group": "86f8b97f3c0bfae3",
        "order": 8,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Sunset",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 300,
        "wires": []
    },
    {
        "id": "6ed478dc5b443826",
        "type": "ui_text",
        "z": "251971951bf65f5f",
        "group": "86f8b97f3c0bfae3",
        "order": 10,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Sundown",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "09dd19abb7c59d7d",
        "type": "function",
        "z": "251971951bf65f5f",
        "name": "Unix Time to Date",
        "func": "var unixTime = msg.payload;\n\nvar date = new Date(unixTime * 1000);\nvar timeString = date. toLocaleString();\n\nmsg.payload = timeString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 340,
        "wires": [
            [
                "6ed478dc5b443826"
            ]
        ]
    },
    {
        "id": "e4e7c40a429e94f2",
        "type": "function",
        "z": "251971951bf65f5f",
        "name": "Unix Time to Date",
        "func": "var unixTime = msg.payload;\n\nvar date = new Date(unixTime * 1000);\nvar timeString = date. toLocaleString();\n\nmsg.payload = timeString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 300,
        "wires": [
            [
                "8bde0cc085df32d5"
            ]
        ]
    },
    {
        "id": "f75e0c7b2436dce0",
        "type": "openweathermap",
        "z": "251971951bf65f5f",
        "name": "Clima Ibirubá",
        "wtype": "current",
        "lon": "-53.0897",
        "lat": "-28.6275",
        "city": "",
        "country": "",
        "language": "en",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "23dafb527f18e834"
            ]
        ]
    },
    {
        "id": "b46b75e6f1eee76c",
        "type": "ui_chart",
        "z": "b26cb4dd784296ba",
        "name": "",
        "group": "4671bbd9b32bd3b5",
        "order": 1,
        "width": 20,
        "height": 4,
        "label": "Painel solar: tensão gerada",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "0",
        "ymax": "12",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 900,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "1a8e28c94a31774e",
        "type": "mqtt in",
        "z": "b26cb4dd784296ba",
        "name": "IoT Core Painel Solar",
        "topic": "$aws/things/lange-IoT-SensorPainelSolar/shadow/update/documents",
        "qos": "0",
        "datatype": "auto",
        "broker": "b90e1ab.b432fe8",
        "inputs": 0,
        "x": 120,
        "y": 100,
        "wires": [
            [
                "d4df72498fa602df"
            ]
        ]
    },
    {
        "id": "d4df72498fa602df",
        "type": "json",
        "z": "b26cb4dd784296ba",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "793f8cd262eecbb1"
            ]
        ]
    },
    {
        "id": "793f8cd262eecbb1",
        "type": "function",
        "z": "b26cb4dd784296ba",
        "name": "",
        "func": "var dados = msg.payload;\nvar dadosState = dados['state'];\nvar dadosReported = dadosState['reported'];\n//var tensao = dadosReported['tensao'];\n\nmsg.payload = dadosReported;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 100,
        "wires": [
            [
                "32eca98e09d39097",
                "42dc4db0b407122c",
                "d38852b69ebbe06f"
            ]
        ]
    },
    {
        "id": "32eca98e09d39097",
        "type": "function",
        "z": "b26cb4dd784296ba",
        "name": "Tensao",
        "func": "var dados = msg.payload;\nvar tensao = dados['tensao'];\nmsg.payload = tensao;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "b46b75e6f1eee76c"
            ]
        ]
    },
    {
        "id": "70dfad72ee923f5b",
        "type": "ui_chart",
        "z": "b26cb4dd784296ba",
        "name": "",
        "group": "4671bbd9b32bd3b5",
        "order": 2,
        "width": 20,
        "height": 4,
        "label": "Painel solar: temperatura",
        "chartType": "line",
        "legend": "true",
        "xformat": "dd HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "-15",
        "ymax": "50",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 890,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "42dc4db0b407122c",
        "type": "function",
        "z": "b26cb4dd784296ba",
        "name": "Temperatura",
        "func": "var dados = msg.payload;\nvar temperatura = dados['temperatura'];\nmsg.payload = temperatura;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 160,
        "wires": [
            [
                "70dfad72ee923f5b"
            ]
        ]
    },
    {
        "id": "a37e4c18cfc53f2c",
        "type": "ui_chart",
        "z": "b26cb4dd784296ba",
        "name": "",
        "group": "4671bbd9b32bd3b5",
        "order": 3,
        "width": 20,
        "height": 4,
        "label": "Painel solar: umidade solo",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "700",
        "ymax": "2600",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "604800",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 900,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "d38852b69ebbe06f",
        "type": "function",
        "z": "b26cb4dd784296ba",
        "name": "umidade solo",
        "func": "var dados = msg.payload;\nvar umidadeSolo = dados['umidadeSolo'];\nmsg.payload = umidadeSolo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "a37e4c18cfc53f2c"
            ]
        ]
    },
    {
        "id": "cd7485afb950708d",
        "type": "ring-buffer",
        "z": "b84e96536d0bc8b3",
        "name": "CB Lange-Home I",
        "capacity": "12",
        "order": "old-to-new",
        "sendOnlyIfFull": false,
        "pushAfterClear": false,
        "extra": false,
        "perTopic": false,
        "x": 350,
        "y": 120,
        "wires": [
            [
                "32ce687f4b8bb747",
                "138201414facd35f",
                "1c26d6b4b4eb0793"
            ]
        ],
        "info": "Buffer circular com valores de corrente\r\n\r\nSensor envia uma leitura a cada 10 segundos\r\n\r\nBuffer com tamanho 12 = 12 amostras = 2min\r\n"
    },
    {
        "id": "c48fc7b128dd388c",
        "type": "mqtt in",
        "z": "b84e96536d0bc8b3",
        "name": "Lange-Home I",
        "topic": "rodrigolange78/feeds/dglange-emonlib3",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "98e3532bd6bb3730",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "cd7485afb950708d"
            ]
        ]
    },
    {
        "id": "e48167cb253b11e7",
        "type": "csv",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 830,
        "y": 120,
        "wires": [
            [
                "95ac90b52744efb1"
            ]
        ]
    },
    {
        "id": "95ac90b52744efb1",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "name": "Generate filename",
        "func": "var date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hour = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds()\n\nvar filename = '/mnt/dados/dadosML/dados-';\nfilename = filename + day + '-' + month + '-' + year + '-';\nfilename = filename + hour + '-' + minutes + '-' + seconds + '.csv';\n\nmsg.topic =  filename;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 120,
        "wires": [
            [
                "90257df46bbfc8d1"
            ]
        ]
    },
    {
        "id": "90257df46bbfc8d1",
        "type": "file",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "filename": "topic",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "32ce687f4b8bb747",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "d": true,
        "name": "function 2",
        "func": "let v = msg.payload;\nlet t = 0;\n\nv.forEach(function (num) { t += num });\n\nlet m = t/12;\nif (m>1){\n    return msg;\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "e48167cb253b11e7"
            ]
        ]
    },
    {
        "id": "138201414facd35f",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "name": "dados chuveiro",
        "func": "let v = msg.payload;\nlet t = 0;\n\nv.forEach(function (num) { t += num });\n\nlet m = t/12;\nif (m>15){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 220,
        "wires": [
            [
                "c41bda135e57c949"
            ]
        ]
    },
    {
        "id": "c41bda135e57c949",
        "type": "csv",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 810,
        "y": 220,
        "wires": [
            [
                "5c15d39f2da19844"
            ]
        ]
    },
    {
        "id": "5c15d39f2da19844",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "name": "Generate filename",
        "func": "var date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hour = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds()\n\nvar filename = '/mnt/dados/dadosML/chuveiro/chuveiro-';\nfilename = filename + day + '-' + month + '-' + year + '-';\nfilename = filename + hour + '-' + minutes + '-' + seconds + '.csv';\n\nmsg.topic =  filename;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 220,
        "wires": [
            [
                "82c5b071147c720e"
            ]
        ]
    },
    {
        "id": "82c5b071147c720e",
        "type": "file",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "filename": "topic",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1c26d6b4b4eb0793",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "name": "dados maquina lavar",
        "func": "let v = msg.payload;\nlet t = 0;\n\nv.forEach(function (num) { t += num });\n\nlet m = t/12;\nif ((m>1.3) && (m<6)){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "b2b06cc16fb09b09"
            ]
        ]
    },
    {
        "id": "b2b06cc16fb09b09",
        "type": "csv",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\r\\n",
        "temp": "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "36dc2b45191cdad6"
            ]
        ]
    },
    {
        "id": "36dc2b45191cdad6",
        "type": "function",
        "z": "b84e96536d0bc8b3",
        "name": "Generate filename",
        "func": "var date = new Date();\nvar year = date.getFullYear();\nvar month = date.getMonth() + 1;\nvar day = date.getDate();\nvar hour = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds()\n\nvar filename = '/mnt/dados/dadosML/maquinaLavar/maquinaLavar-';\nfilename = filename + day + '-' + month + '-' + year + '-';\nfilename = filename + hour + '-' + minutes + '-' + seconds + '.csv';\n\nmsg.topic =  filename;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 300,
        "wires": [
            [
                "490dcb6fe7160ee3"
            ]
        ]
    },
    {
        "id": "490dcb6fe7160ee3",
        "type": "file",
        "z": "b84e96536d0bc8b3",
        "name": "",
        "filename": "topic",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1180,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "8e3aea252bc36358",
        "type": "fs-file-lister",
        "z": "e84559379ead8d21",
        "name": "Files",
        "start": "/mnt/dados/dadosML/chuveiro",
        "pattern": "*.csv",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 270,
        "y": 80,
        "wires": [
            [
                "9f8c3db833038e1b"
            ]
        ]
    },
    {
        "id": "1761cee6f797a71a",
        "type": "inject",
        "z": "e84559379ead8d21",
        "name": "Init",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "change",
        "payload": "/mnt/dados/dadosML",
        "payloadType": "str",
        "x": 110,
        "y": 124,
        "wires": [
            [
                "8e3aea252bc36358",
                "e6870a2d546aca0b"
            ]
        ]
    },
    {
        "id": "e01ef1cae48eda6e",
        "type": "ui_button",
        "z": "e84559379ead8d21",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Refresh",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "refresh",
        "x": 100,
        "y": 64,
        "wires": [
            [
                "8e3aea252bc36358",
                "e6870a2d546aca0b"
            ]
        ]
    },
    {
        "id": "661e8d40f4def3d6",
        "type": "file in",
        "z": "e84559379ead8d21",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 740,
        "y": 160,
        "wires": [
            [
                "9122a376fa483fea"
            ]
        ]
    },
    {
        "id": "9122a376fa483fea",
        "type": "csv",
        "z": "e84559379ead8d21",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 870,
        "y": 160,
        "wires": [
            [
                "d9a8f335e7464e50"
            ]
        ]
    },
    {
        "id": "d9a8f335e7464e50",
        "type": "function",
        "z": "e84559379ead8d21",
        "name": "Format data for chart",
        "func": "var dados = msg.payload[0];\n\nvar chart = [{\n    \"series\": [\"Corrente\"],\n    \"data\": [ [dados[0], dados[1], dados[2], dados[3], dados[4], dados[5], dados[6], dados[7], dados[8], dados[9], dados[10], dados[11]]],\n    \"labels\": [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"]\n}];\nmsg.payload = chart;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "a6b0226d8a8579e5"
            ]
        ]
    },
    {
        "id": "a6b0226d8a8579e5",
        "type": "ui_chart",
        "z": "e84559379ead8d21",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": 17,
        "height": 7,
        "label": "Gráfico chuveiro",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7d48e13.90ee22",
        "type": "ui_table",
        "z": "e84559379ead8d21",
        "group": "160e81fb.f1c86e",
        "name": "Arquivos",
        "order": 3,
        "width": 10,
        "height": 7,
        "columns": [
            {
                "field": "filename",
                "title": "Nome Arquivo",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 760,
        "y": 80,
        "wires": [
            [
                "0d75d11739916f34"
            ]
        ]
    },
    {
        "id": "9f8c3db833038e1b",
        "type": "function",
        "z": "e84559379ead8d21",
        "name": "Converter para tabela",
        "func": "var data = msg.payload;\n\nvar dados = \"[\";\n\ndata.forEach(function acrescentar(item, indice) {\n        dados = dados + \"{\\\"filename\\\": \\\"\" + data[indice] + \"\\\"},\";\n    }\n);\n\ndados = dados + \"{\\\"filename\\\": \\\" \\\"}]\";\n\nmsg.payload = dados;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "da2aa6cc5353e915"
            ]
        ]
    },
    {
        "id": "da2aa6cc5353e915",
        "type": "json",
        "z": "e84559379ead8d21",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 80,
        "wires": [
            [
                "7d48e13.90ee22"
            ]
        ]
    },
    {
        "id": "0d75d11739916f34",
        "type": "change",
        "z": "e84559379ead8d21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"filename\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 80,
        "wires": [
            [
                "661e8d40f4def3d6"
            ]
        ]
    },
    {
        "id": "e6870a2d546aca0b",
        "type": "fs-file-lister",
        "z": "e84559379ead8d21",
        "name": "Files",
        "start": "/mnt/dados/dadosML/maquinaLavar",
        "pattern": "*.csv",
        "folders": "*",
        "hidden": false,
        "lstype": "files",
        "path": true,
        "single": true,
        "depth": 0,
        "stat": false,
        "showWarnings": false,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "b2a678d9f2f262c6"
            ]
        ]
    },
    {
        "id": "356f645188ba0c68",
        "type": "file in",
        "z": "e84559379ead8d21",
        "name": "",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 740,
        "y": 360,
        "wires": [
            [
                "fe91955d9d7b31f4"
            ]
        ]
    },
    {
        "id": "fe91955d9d7b31f4",
        "type": "csv",
        "z": "e84559379ead8d21",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 870,
        "y": 360,
        "wires": [
            [
                "abacd9cb25398c58"
            ]
        ]
    },
    {
        "id": "abacd9cb25398c58",
        "type": "function",
        "z": "e84559379ead8d21",
        "name": "Format data for chart",
        "func": "var dados = msg.payload[0];\n\nvar chart = [{\n    \"series\": [\"Corrente\"],\n    \"data\": [ [dados[0], dados[1], dados[2], dados[3], dados[4], dados[5], dados[6], dados[7], dados[8], dados[9], dados[10], dados[11]]],\n    \"labels\": [ \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"]\n}];\nmsg.payload = chart;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 360,
        "wires": [
            [
                "2294bad2c08aebcd"
            ]
        ]
    },
    {
        "id": "2294bad2c08aebcd",
        "type": "ui_chart",
        "z": "e84559379ead8d21",
        "name": "",
        "group": "160e81fb.f1c86e",
        "order": 4,
        "width": 17,
        "height": 7,
        "label": "Gráfico máquina de lavar roupa",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "",
        "dot": true,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1290,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed8902b728939f9",
        "type": "ui_table",
        "z": "e84559379ead8d21",
        "group": "160e81fb.f1c86e",
        "name": "Arquivos",
        "order": 3,
        "width": 10,
        "height": 7,
        "columns": [
            {
                "field": "filename",
                "title": "Nome Arquivo",
                "width": "",
                "align": "left",
                "formatter": "html",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 760,
        "y": 280,
        "wires": [
            [
                "af39b6b3ba6a3ab6"
            ]
        ]
    },
    {
        "id": "b2a678d9f2f262c6",
        "type": "function",
        "z": "e84559379ead8d21",
        "name": "Converter para tabela",
        "func": "var data = msg.payload;\n\nvar dados = \"[\";\n\ndata.forEach(function acrescentar(item, indice) {\n        dados = dados + \"{\\\"filename\\\": \\\"\" + data[indice] + \"\\\"},\";\n    }\n);\n\ndados = dados + \"{\\\"filename\\\": \\\" \\\"}]\";\n\nmsg.payload = dados;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 280,
        "wires": [
            [
                "dcbfd9961ac5a6aa"
            ]
        ]
    },
    {
        "id": "dcbfd9961ac5a6aa",
        "type": "json",
        "z": "e84559379ead8d21",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "6ed8902b728939f9"
            ]
        ]
    },
    {
        "id": "af39b6b3ba6a3ab6",
        "type": "change",
        "z": "e84559379ead8d21",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[\"filename\"]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 280,
        "wires": [
            [
                "356f645188ba0c68"
            ]
        ]
    }
]